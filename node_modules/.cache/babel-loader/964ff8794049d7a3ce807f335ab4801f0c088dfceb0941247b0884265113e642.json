{"ast":null,"code":"import React,{useState}from'react';import'./AddEnclosureForm.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddEnclosureForm=_ref=>{let{onAddEnclosure}=_ref;const[name,setName]=useState('');const[enclosure_type,setType]=useState('');const[build_date,setBuildDate]=useState('');const[cleaning_start,setCleaningStart]=useState('');const[cleaning_end,setCleaningEnd]=useState('');// Function to handle form submission\nconst handleSubmit=e=>{e.preventDefault();if(!name||!enclosure_type||!build_date||!cleaning_start||!cleaning_end){alert('Please fill in all fields');return;}// Check if the build date is after the present date\nconst currentDate=new Date().toISOString().split('T')[0];// Get current date in 'yyyy-mm-dd' format\nif(build_date>currentDate){alert('Build date cannot be after the present date');return;}// Store the form data in variables\nconst enclosureData={name,enclosure_type,build_date,cleaning_start,cleaning_end};// Backend logic should be done here to handle storing the data.\n// You can pass the enclosureData to any function or API call for further processing.\n// Logging variables\nconsole.log('Name:',name);console.log('Enclosure Type:',enclosure_type);console.log('Build Date:',build_date);console.log('Cleaning Start Time:',cleaning_start);console.log('Cleaning End Time:',cleaning_end);// Call the function passed from parent component to add enclosure\n// Reset form fields after submission\nhandleReset();};// Function to reset form fields\nconst handleReset=()=>{setName('');setType('');setBuildDate('');setCleaningStart('');setCleaningEnd('');};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"enclosure-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",placeholder:\"Name\",value:name,onChange:e=>setName(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"enclosure_type\",children:\"Enclosure Type:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"enclosure_type\",placeholder:\"Enclosure Type\",value:enclosure_type,onChange:e=>setType(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"build_date\",children:\"Build Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"build_date\",value:build_date,onChange:e=>setBuildDate(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cleaning_start\",children:\"Cleaning Start Time:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",id:\"cleaning_start\",value:cleaning_start,onChange:e=>setCleaningStart(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cleaning_end\",children:\"Cleaning End Time:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",id:\"cleaning_end\",value:cleaning_end,onChange:e=>setCleaningEnd(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Enclosure\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleReset,children:\"Reset\"})]})]});};export default AddEnclosureForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","AddEnclosureForm","_ref","onAddEnclosure","name","setName","enclosure_type","setType","build_date","setBuildDate","cleaning_start","setCleaningStart","cleaning_end","setCleaningEnd","handleSubmit","e","preventDefault","alert","currentDate","Date","toISOString","split","enclosureData","console","log","handleReset","onSubmit","className","children","htmlFor","type","id","placeholder","value","onChange","target","required","onClick"],"sources":["/Users/omariftikhar/Desktop/zoo-website copy try 2/src/components/AddEnclosureForm/AddEnclosureForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './AddEnclosureForm.css';\n\nconst AddEnclosureForm = ({ onAddEnclosure }) => {\n  const [name, setName] = useState('');\n  const [enclosure_type, setType] = useState('');\n  const [build_date, setBuildDate] = useState('');\n  const [cleaning_start, setCleaningStart] = useState('');\n  const [cleaning_end, setCleaningEnd] = useState('');\n\n  // Function to handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name || !enclosure_type || !build_date || !cleaning_start || !cleaning_end) {\n      alert('Please fill in all fields');\n      return;\n    }\n\n    // Check if the build date is after the present date\n    const currentDate = new Date().toISOString().split('T')[0]; // Get current date in 'yyyy-mm-dd' format\n    if (build_date > currentDate) {\n      alert('Build date cannot be after the present date');\n      return;\n    }\n\n    // Store the form data in variables\n    const enclosureData = {\n      name,\n      enclosure_type,\n      build_date,\n      cleaning_start,\n      cleaning_end\n    };\n\n    // Backend logic should be done here to handle storing the data.\n    // You can pass the enclosureData to any function or API call for further processing.\n\n    // Logging variables\n    console.log('Name:', name);\n    console.log('Enclosure Type:', enclosure_type);\n    console.log('Build Date:', build_date);\n    console.log('Cleaning Start Time:', cleaning_start);\n    console.log('Cleaning End Time:', cleaning_end);\n\n    // Call the function passed from parent component to add enclosure\n    // Reset form fields after submission\n    handleReset();\n  };\n\n  // Function to reset form fields\n  const handleReset = () => {\n    setName('');\n    setType('');\n    setBuildDate('');\n    setCleaningStart('');\n    setCleaningEnd('');\n  };\n  \n  return (\n    <form onSubmit={handleSubmit} className=\"enclosure-form\">\n      <div className=\"form-group\">\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"enclosure_type\">Enclosure Type:</label>\n        <input\n          type=\"text\"\n          id=\"enclosure_type\"\n          placeholder=\"Enclosure Type\"\n          value={enclosure_type}\n          onChange={(e) => setType(e.target.value)}\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"build_date\">Build Date:</label>\n        <input\n          type=\"date\"\n          id=\"build_date\"\n          value={build_date}\n          onChange={(e) => setBuildDate(e.target.value)}\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"cleaning_start\">Cleaning Start Time:</label>\n        <input\n          type=\"time\"\n          id=\"cleaning_start\"\n          value={cleaning_start}\n          onChange={(e) => setCleaningStart(e.target.value)}\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"cleaning_end\">Cleaning End Time:</label>\n        <input\n          type=\"time\"\n          id=\"cleaning_end\"\n          value={cleaning_end}\n          onChange={(e) => setCleaningEnd(e.target.value)}\n          required\n        />\n      </div>\n      <div className=\"form-actions\">\n        <button type=\"submit\">Add Enclosure</button>\n        <button type=\"button\" onClick={handleReset}>Reset</button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddEnclosureForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}