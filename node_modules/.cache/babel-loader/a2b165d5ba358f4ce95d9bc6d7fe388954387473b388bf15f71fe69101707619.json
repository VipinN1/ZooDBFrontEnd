{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siris\\\\OneDrive\\\\Documents\\\\GitHub\\\\ZooDBFrontEnd\\\\src\\\\components\\\\Donation\\\\Donation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Donation.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Donation({\n  customerId\n}) {\n  _s();\n  // State variables to store donation information\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [donationDate, setDonationDate] = useState('');\n\n  // Function to handle form submission\n  const handleSubmit = event => {\n    event.preventDefault();\n    const currentDate = new Date();\n    const formattedDate = `${currentDate.getFullYear()}-${(currentDate.getMonth() + 1).toString().padStart(2, '0')}-${currentDate.getDate().toString().padStart(2, '0')}`;\n\n    // Use functional form of setState to ensure you're working with the latest state value\n    setDonationDate(prevDoA => formattedDate);\n\n    // Logging the donation information\n    console.log('Donor Name:', name);\n    console.log('Donor Email:', email);\n    console.log('Donation Amount (USD):', amount);\n    console.log('Donation Date:', formattedDate);\n    // Add backend logic here to save donation information\n    // For example, you can make an API call to send this data to the server\n    // After saving the data, you can show a success message or handle errors accordingly\n\n    const data = {\n      donationAmount: amount,\n      customerId: customerId,\n      donationDate: formattedDate\n    };\n    axios.post('http://localhost:5095/api/ZooDb/NewDonation', data).then(res => {\n      console.log(res);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-donation\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Header-donation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"Main-donation\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"To make a donation, please fill out the form below:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"DonationForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Amount (USD):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          name: \"amount\",\n          min: \"1\",\n          required: true,\n          value: amount,\n          onChange: e => setAmount(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Donate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"Footer-donation\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Thank you for supporting our zoo!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Donation, \"XhRJC1m8hbf4Lxj1Z4p3M/+Ae6M=\");\n_c = Donation;\n;\nexport default Donation;\nvar _c;\n$RefreshReg$(_c, \"Donation\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Donation","customerId","_s","name","setName","email","setEmail","amount","setAmount","donationDate","setDonationDate","handleSubmit","event","preventDefault","currentDate","Date","formattedDate","getFullYear","getMonth","toString","padStart","getDate","prevDoA","console","log","data","donationAmount","post","then","res","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","min","required","value","onChange","e","parseFloat","target","_c","$RefreshReg$"],"sources":["C:/Users/siris/OneDrive/Documents/GitHub/ZooDBFrontEnd/src/components/Donation/Donation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Donation.css'\r\nimport axios from 'axios';\r\n\r\nfunction Donation({customerId}){\r\n  // State variables to store donation information\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n  const [donationDate, setDonationDate] = useState('');\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n\r\n    const currentDate = new Date();\r\n    const formattedDate = `${currentDate.getFullYear()}-${(currentDate.getMonth() + 1)\r\n      .toString()\r\n      .padStart(2, '0')}-${currentDate.getDate().toString().padStart(2, '0')}`;\r\n\r\n    // Use functional form of setState to ensure you're working with the latest state value\r\n    setDonationDate(prevDoA => formattedDate);\r\n\r\n    // Logging the donation information\r\n    console.log('Donor Name:', name);\r\n    console.log('Donor Email:', email);\r\n    console.log('Donation Amount (USD):', amount);\r\n    console.log('Donation Date:', formattedDate);\r\n    // Add backend logic here to save donation information\r\n    // For example, you can make an API call to send this data to the server\r\n    // After saving the data, you can show a success message or handle errors accordingly\r\n\r\n\r\n    const data = {\r\n      donationAmount: amount,\r\n      customerId: customerId,\r\n      donationDate: formattedDate\r\n    };\r\n    axios.post('http://localhost:5095/api/ZooDb/NewDonation', data)\r\n    .then((res) =>{console.log(res); });\r\n\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"App-donation\">\r\n      <header className=\"Header-donation\">\r\n      </header>\r\n      <main className=\"Main-donation\">\r\n        <p>\r\n          To make a donation, please fill out the form below:\r\n        </p>\r\n        <form className=\"DonationForm\" onSubmit={handleSubmit}>\r\n          <label htmlFor=\"amount\">Amount (USD):</label>\r\n          <input type=\"number\" id=\"amount\" name=\"amount\" min=\"1\" required value={amount} onChange={(e) => setAmount(parseFloat(e.target.value))} />\r\n          <button type=\"submit\">Donate</button>\r\n        </form>\r\n      </main>\r\n      <footer className=\"Footer-donation\">\r\n        <p>Thank you for supporting our zoo!</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Donation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAC;EAACC;AAAU,CAAC,EAAC;EAAAC,EAAA;EAC7B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAMe,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IAGtB,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC9B,MAAMC,aAAa,GAAI,GAAEF,WAAW,CAACG,WAAW,CAAC,CAAE,IAAG,CAACH,WAAW,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,EAC9EC,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGN,WAAW,CAACO,OAAO,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;;IAE1E;IACAV,eAAe,CAACY,OAAO,IAAIN,aAAa,CAAC;;IAEzC;IACAO,OAAO,CAACC,GAAG,CAAC,aAAa,EAAErB,IAAI,CAAC;IAChCoB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEnB,KAAK,CAAC;IAClCkB,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEjB,MAAM,CAAC;IAC7CgB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAER,aAAa,CAAC;IAC5C;IACA;IACA;;IAGA,MAAMS,IAAI,GAAG;MACXC,cAAc,EAAEnB,MAAM;MACtBN,UAAU,EAAEA,UAAU;MACtBQ,YAAY,EAAEO;IAChB,CAAC;IACDnB,KAAK,CAAC8B,IAAI,CAAC,6CAA6C,EAAEF,IAAI,CAAC,CAC9DG,IAAI,CAAEC,GAAG,IAAI;MAACN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC;IAAE,CAAC,CAAC;EAErC,CAAC;EAGD,oBACE9B,OAAA;IAAK+B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BhC,OAAA;MAAQ+B,SAAS,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACTpC,OAAA;MAAM+B,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC7BhC,OAAA;QAAAgC,QAAA,EAAG;MAEH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJpC,OAAA;QAAM+B,SAAS,EAAC,cAAc;QAACM,QAAQ,EAAEzB,YAAa;QAAAoB,QAAA,gBACpDhC,OAAA;UAAOsC,OAAO,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7CpC,OAAA;UAAOuC,IAAI,EAAC,QAAQ;UAACC,EAAE,EAAC,QAAQ;UAACpC,IAAI,EAAC,QAAQ;UAACqC,GAAG,EAAC,GAAG;UAACC,QAAQ;UAACC,KAAK,EAAEnC,MAAO;UAACoC,QAAQ,EAAGC,CAAC,IAAKpC,SAAS,CAACqC,UAAU,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzIpC,OAAA;UAAQuC,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACPpC,OAAA;MAAQ+B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eACjChC,OAAA;QAAAgC,QAAA,EAAG;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACjC,EAAA,CA5DQF,QAAQ;AAAA+C,EAAA,GAAR/C,QAAQ;AA4DhB;AAED,eAAeA,QAAQ;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}