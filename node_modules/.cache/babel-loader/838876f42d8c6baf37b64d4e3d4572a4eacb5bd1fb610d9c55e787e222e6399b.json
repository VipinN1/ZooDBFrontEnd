{"ast":null,"code":"var _jsxFileName = \"/Users/omariftikhar/Desktop/Zoo Frontend/ZooDBFrontEnd/src/components/RevenueReport/RevenueReport.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './RevenueReport.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RevenueReport() {\n  _s();\n  // State for form fields\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [transactionType, setTransactionType] = useState('all');\n  const [queryData, setQueryData] = useState([]);\n  const [showAdditionalColumns, setShowAdditionalColumns] = useState(false);\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  const [ticketTypePercentages, setTicketTypePercentages] = useState({\n    AdultTickets: 0,\n    ChildTickets: 0,\n    SeniorTickets: 0,\n    InfantTickets: 0\n  });\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    // Request payload\n    const requestData = {\n      transactionType,\n      ...(startDate && {\n        startDate\n      }),\n      ...(endDate && {\n        endDate\n      })\n    };\n\n    // Post request to fetch revenue data based on the input fields\n    try {\n      const response = await axios.post('http://localhost:5095/api/ZooDb/RevenueReport', requestData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Response Data:', response.data);\n      // Set the report data based on the response from the back-end\n      setQueryData(response.data);\n      // Show additional columns if transaction type is \"Ticket Purchase\"\n      setShowAdditionalColumns(transactionType === 'ticket');\n    } catch (error) {\n      console.error('Error fetching query data:', error);\n      // Clear query data in case of error\n      setQueryData([]);\n    }\n  };\n  useEffect(() => {\n    // Sort the queryData array by TransactionDate\n    const sortedQueryData = queryData.slice().sort((a, b) => {\n      return new Date(a.TransactionDate) - new Date(b.TransactionDate);\n    });\n\n    // Update the state with the sorted array\n    setQueryData(sortedQueryData);\n\n    // Calculate total revenue and ticket type percentages whenever queryData changes\n    const revenue = sortedQueryData.reduce((acc, curr) => acc + curr.Amount, 0);\n    setTotalRevenue(revenue);\n    if (showAdditionalColumns) {\n      const ticketTypeTotals = {\n        AdultTickets: 0,\n        ChildTickets: 0,\n        SeniorTickets: 0,\n        InfantTickets: 0\n      };\n\n      // Calculate ticket type totals\n      sortedQueryData.forEach(transaction => {\n        ticketTypeTotals.AdultTickets += transaction.AdultTickets || 0;\n        ticketTypeTotals.ChildTickets += transaction.ChildTickets || 0;\n        ticketTypeTotals.SeniorTickets += transaction.SeniorTickets || 0;\n        ticketTypeTotals.InfantTickets += transaction.InfantTickets || 0;\n      });\n\n      // Calculate total number of tickets\n      const totalTickets = sortedQueryData.reduce((acc, transaction) => {\n        if (transaction.TransactionType === 'Ticket Purchase') {\n          acc += transaction.AdultTickets + transaction.ChildTickets + transaction.SeniorTickets + transaction.InfantTickets;\n        }\n        return acc;\n      }, 0);\n\n      // Calculate ticket type percentages\n      const percentages = {\n        AdultTickets: ticketTypeTotals.AdultTickets / totalTickets * 100,\n        ChildTickets: ticketTypeTotals.ChildTickets / totalTickets * 100,\n        SeniorTickets: ticketTypeTotals.SeniorTickets / totalTickets * 100,\n        InfantTickets: ticketTypeTotals.InfantTickets / totalTickets * 100\n      };\n\n      // Round percentages to two decimal places\n      Object.entries(percentages).forEach(([type, percentage]) => {\n        percentages[type] = parseFloat(percentage.toFixed(2));\n      });\n      setTicketTypePercentages(percentages);\n    }\n  }, [queryData, showAdditionalColumns]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"revenue-query-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Zoo Revenue Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"startDate\",\n          children: \"Start Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"startDate\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"endDate\",\n          children: \"End Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"endDate\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"transactionType\",\n          children: \"Transaction Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"transactionType\",\n          value: transactionType,\n          onChange: e => setTransactionType(e.target.value),\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ticket\",\n            children: \"Ticket Purchase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"donation\",\n            children: \"Donation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Generate Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), queryData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"query-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Revenue Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Revenue: $\", totalRevenue.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), showAdditionalColumns && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-type-percentages\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Ticket Type Percentages:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(ticketTypePercentages).map(([type, percentage]) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [type, \": \", percentage.toFixed(2), \"%\"]\n          }, type, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"query-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transaction Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), showAdditionalColumns && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Adult Tickets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Child Tickets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Senior Tickets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Infant Tickets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: queryData.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.CustomerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.TransactionType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.TransactionDate ? new Date(transaction.TransactionDate).toLocaleDateString() : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", transaction.Amount ? transaction.Amount.toFixed(2) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 21\n            }, this), showAdditionalColumns && transaction.TransactionType === \"Ticket Purchase\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.AdultTickets || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.ChildTickets || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.SeniorTickets || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.InfantTickets || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(RevenueReport, \"+V6AOX4q/YSmmaQZkt3ZdwNHtSI=\");\n_c = RevenueReport;\nexport default RevenueReport;\nvar _c;\n$RefreshReg$(_c, \"RevenueReport\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","RevenueReport","_s","startDate","setStartDate","endDate","setEndDate","transactionType","setTransactionType","queryData","setQueryData","showAdditionalColumns","setShowAdditionalColumns","totalRevenue","setTotalRevenue","ticketTypePercentages","setTicketTypePercentages","AdultTickets","ChildTickets","SeniorTickets","InfantTickets","handleFormSubmit","event","preventDefault","requestData","response","post","headers","console","log","data","error","sortedQueryData","slice","sort","a","b","Date","TransactionDate","revenue","reduce","acc","curr","Amount","ticketTypeTotals","forEach","transaction","totalTickets","TransactionType","percentages","Object","entries","type","percentage","parseFloat","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","e","target","length","map","index","CustomerName","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/omariftikhar/Desktop/Zoo Frontend/ZooDBFrontEnd/src/components/RevenueReport/RevenueReport.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './RevenueReport.css';\nimport axios from 'axios';\n\nfunction RevenueReport() {\n  // State for form fields\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [transactionType, setTransactionType] = useState('all');\n\n  const [queryData, setQueryData] = useState([]);\n  const [showAdditionalColumns, setShowAdditionalColumns] = useState(false);\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  const [ticketTypePercentages, setTicketTypePercentages] = useState({\n    AdultTickets: 0,\n    ChildTickets: 0,\n    SeniorTickets: 0,\n    InfantTickets: 0,\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // Request payload\n    const requestData = {\n        transactionType,\n        ...(startDate && { startDate }),\n        ...(endDate && { endDate }),\n    };\n\n    // Post request to fetch revenue data based on the input fields\n    try {\n        const response = await axios.post('http://localhost:5095/api/ZooDb/RevenueReport', requestData, {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        console.log('Response Data:', response.data);\n        // Set the report data based on the response from the back-end\n        setQueryData(response.data);\n        // Show additional columns if transaction type is \"Ticket Purchase\"\n        setShowAdditionalColumns(transactionType === 'ticket');\n    } catch (error) {\n        console.error('Error fetching query data:', error);\n        // Clear query data in case of error\n        setQueryData([]);\n    }\n};\n\nuseEffect(() => {\n    // Sort the queryData array by TransactionDate\n    const sortedQueryData = queryData.slice().sort((a, b) => {\n      return new Date(a.TransactionDate) - new Date(b.TransactionDate);\n    });\n  \n    // Update the state with the sorted array\n    setQueryData(sortedQueryData);\n  \n    // Calculate total revenue and ticket type percentages whenever queryData changes\n    const revenue = sortedQueryData.reduce((acc, curr) => acc + curr.Amount, 0);\n    setTotalRevenue(revenue);\n  \n    if (showAdditionalColumns) {\n      const ticketTypeTotals = {\n        AdultTickets: 0,\n        ChildTickets: 0,\n        SeniorTickets: 0,\n        InfantTickets: 0,\n      };\n  \n      // Calculate ticket type totals\n      sortedQueryData.forEach((transaction) => {\n        ticketTypeTotals.AdultTickets += transaction.AdultTickets || 0;\n        ticketTypeTotals.ChildTickets += transaction.ChildTickets || 0;\n        ticketTypeTotals.SeniorTickets += transaction.SeniorTickets || 0;\n        ticketTypeTotals.InfantTickets += transaction.InfantTickets || 0;\n      });\n  \n      // Calculate total number of tickets\n      const totalTickets = sortedQueryData.reduce((acc, transaction) => {\n        if (transaction.TransactionType === 'Ticket Purchase') {\n          acc += transaction.AdultTickets + transaction.ChildTickets + transaction.SeniorTickets + transaction.InfantTickets;\n        }\n        return acc;\n      }, 0);\n  \n      // Calculate ticket type percentages\n      const percentages = {\n        AdultTickets: (ticketTypeTotals.AdultTickets / totalTickets) * 100,\n        ChildTickets: (ticketTypeTotals.ChildTickets / totalTickets) * 100,\n        SeniorTickets: (ticketTypeTotals.SeniorTickets / totalTickets) * 100,\n        InfantTickets: (ticketTypeTotals.InfantTickets / totalTickets) * 100,\n      };\n  \n      // Round percentages to two decimal places\n      Object.entries(percentages).forEach(([type, percentage]) => {\n        percentages[type] = parseFloat(percentage.toFixed(2));\n      });\n  \n      setTicketTypePercentages(percentages);\n    }\n  }, [queryData, showAdditionalColumns]);\n  \n  return (\n    <div className=\"revenue-query-container\">\n      <h2>Zoo Revenue Report</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"startDate\">Start Date:</label>\n          <input\n            type=\"date\"\n            id=\"startDate\"\n            value={startDate}\n            onChange={(e) => setStartDate(e.target.value)}\n            className=\"input\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"endDate\">End Date:</label>\n          <input\n            type=\"date\"\n            id=\"endDate\"\n            value={endDate}\n            onChange={(e) => setEndDate(e.target.value)}\n            className=\"input\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"transactionType\">Transaction Type:</label>\n          <select\n            id=\"transactionType\"\n            value={transactionType}\n            onChange={(e) => setTransactionType(e.target.value)}\n            className=\"input\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"ticket\">Ticket Purchase</option>\n            <option value=\"donation\">Donation</option>\n          </select>\n        </div>\n        <button type=\"submit\" className=\"submit-button\">\n          Generate Report\n        </button>\n      </form>\n\n      {/* Display report data if available */}\n      {queryData.length > 0 && (\n        <div className=\"query-data\">\n          <h3>Revenue Report:</h3>\n          <p>Total Revenue: ${totalRevenue.toFixed(2)}</p>\n          {/* Display ticket type percentages only if \"Ticket Purchase\" is selected and the report is generated */}\n          {showAdditionalColumns && (\n            <div className=\"ticket-type-percentages\">\n              <h4>Ticket Type Percentages:</h4>\n              <ul>\n                {Object.entries(ticketTypePercentages).map(([type, percentage]) => (\n                  <li key={type}>\n                    {type}: {percentage.toFixed(2)}%\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          <table className=\"query-table\">\n            <thead>\n              <tr>\n                <th>Customer Name</th>\n                <th>Transaction Type</th>\n                <th>Date</th>\n                <th>Amount</th>\n                {/* Only show additional columns if \"Ticket Purchase\" is selected and the report is generated */}\n                {showAdditionalColumns && (\n                  <>\n                    <th>Adult Tickets</th>\n                    <th>Child Tickets</th>\n                    <th>Senior Tickets</th>\n                    <th>Infant Tickets</th>\n                  </>\n                )}\n              </tr>\n            </thead>\n            <tbody>\n                {queryData.map((transaction, index) => (\n                    <tr key={index}>\n                    <td>{transaction.CustomerName}</td>\n                    <td>{transaction.TransactionType}</td>\n                    <td>{transaction.TransactionDate ? new Date(transaction.TransactionDate).toLocaleDateString() : \"\"}</td>\n                    <td>${transaction.Amount ? transaction.Amount.toFixed(2) : \"\"}</td>\n                    {/* Display ticket type values only if the transaction type is \"Ticket Purchase\" */}\n                    {showAdditionalColumns && transaction.TransactionType === \"Ticket Purchase\" && (\n                        <>\n                        <td>{transaction.AdultTickets || 0}</td>\n                        <td>{transaction.ChildTickets || 0}</td>\n                        <td>{transaction.SeniorTickets || 0}</td>\n                        <td>{transaction.InfantTickets || 0}</td>\n                        </>\n                    )}\n                    </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default RevenueReport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}