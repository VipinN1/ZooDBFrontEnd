{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siris\\\\OneDrive\\\\Documents\\\\GitHub\\\\ZooDBFrontEnd\\\\src\\\\components\\\\RevenueReport\\\\RevenueReport.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './RevenueReport.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RevenueReport() {\n  _s();\n  // State for form fields\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [transactionType, setTransactionType] = useState('all');\n  const [queryData, setQueryData] = useState([]);\n  const [showAdditionalColumns, setShowAdditionalColumns] = useState(false);\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  const [ticketTypePercentages, setTicketTypePercentages] = useState({\n    AdultTickets: 0,\n    ChildTickets: 0,\n    SeniorTickets: 0,\n    InfantTickets: 0\n  });\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    // Request payload\n    const requestData = {\n      transactionType,\n      startDate: startDate || null,\n      endDate: endDate || null\n    };\n\n    // Post request to fetch revenue data based on the input fields\n    try {\n      const response = await axios.post(`https://zoodatabasebackend.azurewebsites.net/api/ZooDb/RevenueReport/${transactionType}`, requestData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Sort the response data by TransactionDate\n      const sortedData = response.data.slice().sort((a, b) => {\n        return new Date(a.TransactionDate) - new Date(b.TransactionDate);\n      });\n\n      // Set the report data based on the sorted response from the back-end\n      setQueryData(sortedData);\n\n      // Calculate total revenue\n      const revenue = sortedData.reduce((acc, curr) => acc + curr.Amount, 0);\n      setTotalRevenue(revenue);\n\n      // Calculate ticket type percentages\n      if (transactionType === 'ticket') {\n        const ticketTypeTotals = {\n          AdultTickets: 0,\n          ChildTickets: 0,\n          SeniorTickets: 0,\n          InfantTickets: 0\n        };\n        sortedData.forEach(transaction => {\n          ticketTypeTotals.AdultTickets += transaction.AdultTickets || 0;\n          ticketTypeTotals.ChildTickets += transaction.ChildTickets || 0;\n          ticketTypeTotals.SeniorTickets += transaction.SeniorTickets || 0;\n          ticketTypeTotals.InfantTickets += transaction.InfantTickets || 0;\n        });\n        const totalTickets = sortedData.reduce((acc, transaction) => {\n          if (transaction.TransactionType === 'Ticket Purchase') {\n            acc += transaction.AdultTickets + transaction.ChildTickets + transaction.SeniorTickets + transaction.InfantTickets;\n          }\n          return acc;\n        }, 0);\n        const percentages = {\n          AdultTickets: ticketTypeTotals.AdultTickets / totalTickets * 100,\n          ChildTickets: ticketTypeTotals.ChildTickets / totalTickets * 100,\n          SeniorTickets: ticketTypeTotals.SeniorTickets / totalTickets * 100,\n          InfantTickets: ticketTypeTotals.InfantTickets / totalTickets * 100\n        };\n        setTicketTypePercentages(percentages);\n      } else {\n        // If transactionType is not 'ticket', reset ticketTypePercentages\n        setTicketTypePercentages({\n          AdultTickets: 0,\n          ChildTickets: 0,\n          SeniorTickets: 0,\n          InfantTickets: 0\n        });\n      }\n\n      // Show additional columns if transaction type is \"Ticket Purchase\"\n      setShowAdditionalColumns(transactionType === 'ticket');\n    } catch (error) {\n      console.error('Error fetching query data:', error);\n      // Clear query data in case of error\n      setQueryData([]);\n      // Reset total revenue and ticket type percentages\n      setTotalRevenue(0);\n      setTicketTypePercentages({\n        AdultTickets: 0,\n        ChildTickets: 0,\n        SeniorTickets: 0,\n        InfantTickets: 0\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"revenue-query-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Zoo Revenue Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"startDate\",\n          children: \"Start Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"startDate\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"endDate\",\n          children: \"End Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"endDate\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"transactionType\",\n          children: \"Transaction Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"transactionType\",\n          value: transactionType,\n          onChange: e => setTransactionType(e.target.value),\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ticket\",\n            children: \"Ticket Purchase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"donation\",\n            children: \"Donation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Generate Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), queryData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"query-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Revenue Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Revenue: $\", totalRevenue.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), showAdditionalColumns && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-type-percentages\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Ticket Type Percentages:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(ticketTypePercentages).map(([type, percentage]) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [type, \": \", percentage.toFixed(2), \"%\"]\n          }, type, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"query-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transaction Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), showAdditionalColumns && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Adult Tickets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Child Tickets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Senior Tickets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Infant Tickets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: queryData.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.CustomerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.TransactionType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.TransactionDate ? new Date(transaction.TransactionDate).toLocaleDateString() : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", transaction.Amount ? transaction.Amount.toFixed(2) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this), showAdditionalColumns && transaction.TransactionType === \"Ticket Purchase\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.AdultTickets || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.ChildTickets || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.SeniorTickets || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.InfantTickets || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(RevenueReport, \"Da8oRSxBj2yRQ0RKlGiA+LgrCY0=\");\n_c = RevenueReport;\nexport default RevenueReport;\nvar _c;\n$RefreshReg$(_c, \"RevenueReport\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","RevenueReport","_s","startDate","setStartDate","endDate","setEndDate","transactionType","setTransactionType","queryData","setQueryData","showAdditionalColumns","setShowAdditionalColumns","totalRevenue","setTotalRevenue","ticketTypePercentages","setTicketTypePercentages","AdultTickets","ChildTickets","SeniorTickets","InfantTickets","handleFormSubmit","event","preventDefault","requestData","response","post","headers","sortedData","data","slice","sort","a","b","Date","TransactionDate","revenue","reduce","acc","curr","Amount","ticketTypeTotals","forEach","transaction","totalTickets","TransactionType","percentages","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","length","toFixed","Object","entries","map","percentage","index","CustomerName","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/siris/OneDrive/Documents/GitHub/ZooDBFrontEnd/src/components/RevenueReport/RevenueReport.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './RevenueReport.css';\r\nimport axios from 'axios';\r\n\r\nfunction RevenueReport() {\r\n  // State for form fields\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [transactionType, setTransactionType] = useState('all');\r\n  const [queryData, setQueryData] = useState([]);\r\n  const [showAdditionalColumns, setShowAdditionalColumns] = useState(false);\r\n  const [totalRevenue, setTotalRevenue] = useState(0);\r\n  const [ticketTypePercentages, setTicketTypePercentages] = useState({\r\n    AdultTickets: 0,\r\n    ChildTickets: 0,\r\n    SeniorTickets: 0,\r\n    InfantTickets: 0,\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    // Request payload\r\n    const requestData = {\r\n      transactionType,\r\n      startDate: startDate || null,\r\n      endDate: endDate || null,\r\n    };\r\n  \r\n    // Post request to fetch revenue data based on the input fields\r\n    try {\r\n      const response = await axios.post(`https://zoodatabasebackend.azurewebsites.net/api/ZooDb/RevenueReport/${transactionType}`, requestData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n  \r\n      // Sort the response data by TransactionDate\r\n      const sortedData = response.data.slice().sort((a, b) => {\r\n        return new Date(a.TransactionDate) - new Date(b.TransactionDate);\r\n      });\r\n  \r\n      // Set the report data based on the sorted response from the back-end\r\n      setQueryData(sortedData);\r\n  \r\n      // Calculate total revenue\r\n      const revenue = sortedData.reduce((acc, curr) => acc + curr.Amount, 0);\r\n      setTotalRevenue(revenue);\r\n  \r\n      // Calculate ticket type percentages\r\n      if (transactionType === 'ticket') {\r\n        const ticketTypeTotals = {\r\n          AdultTickets: 0,\r\n          ChildTickets: 0,\r\n          SeniorTickets: 0,\r\n          InfantTickets: 0,\r\n        };\r\n  \r\n        sortedData.forEach((transaction) => {\r\n          ticketTypeTotals.AdultTickets += transaction.AdultTickets || 0;\r\n          ticketTypeTotals.ChildTickets += transaction.ChildTickets || 0;\r\n          ticketTypeTotals.SeniorTickets += transaction.SeniorTickets || 0;\r\n          ticketTypeTotals.InfantTickets += transaction.InfantTickets || 0;\r\n        });\r\n  \r\n        const totalTickets = sortedData.reduce((acc, transaction) => {\r\n          if (transaction.TransactionType === 'Ticket Purchase') {\r\n            acc += transaction.AdultTickets + transaction.ChildTickets + transaction.SeniorTickets + transaction.InfantTickets;\r\n          }\r\n          return acc;\r\n        }, 0);\r\n  \r\n        const percentages = {\r\n          AdultTickets: (ticketTypeTotals.AdultTickets / totalTickets) * 100,\r\n          ChildTickets: (ticketTypeTotals.ChildTickets / totalTickets) * 100,\r\n          SeniorTickets: (ticketTypeTotals.SeniorTickets / totalTickets) * 100,\r\n          InfantTickets: (ticketTypeTotals.InfantTickets / totalTickets) * 100,\r\n        };\r\n  \r\n        setTicketTypePercentages(percentages);\r\n      } else {\r\n        // If transactionType is not 'ticket', reset ticketTypePercentages\r\n        setTicketTypePercentages({\r\n          AdultTickets: 0,\r\n          ChildTickets: 0,\r\n          SeniorTickets: 0,\r\n          InfantTickets: 0,\r\n        });\r\n      }\r\n  \r\n      // Show additional columns if transaction type is \"Ticket Purchase\"\r\n      setShowAdditionalColumns(transactionType === 'ticket');\r\n    } catch (error) {\r\n      console.error('Error fetching query data:', error);\r\n      // Clear query data in case of error\r\n      setQueryData([]);\r\n      // Reset total revenue and ticket type percentages\r\n      setTotalRevenue(0);\r\n      setTicketTypePercentages({\r\n        AdultTickets: 0,\r\n        ChildTickets: 0,\r\n        SeniorTickets: 0,\r\n        InfantTickets: 0,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"revenue-query-container\">\r\n      <h2>Zoo Revenue Report</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"startDate\">Start Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"startDate\"\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"endDate\">End Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"endDate\"\r\n            value={endDate}\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"transactionType\">Transaction Type:</label>\r\n          <select\r\n            id=\"transactionType\"\r\n            value={transactionType}\r\n            onChange={(e) => setTransactionType(e.target.value)}\r\n            className=\"input\"\r\n          >\r\n            <option value=\"all\">All</option>\r\n            <option value=\"ticket\">Ticket Purchase</option>\r\n            <option value=\"donation\">Donation</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-button\">\r\n          Generate Report\r\n        </button>\r\n      </form>\r\n\r\n      {/* Display report data if available */}\r\n      {queryData.length > 0 && (\r\n        <div className=\"query-data\">\r\n          <h3>Revenue Report:</h3>\r\n          <p>Total Revenue: ${totalRevenue.toFixed(2)}</p>\r\n          {/* Display ticket type percentages only if \"Ticket Purchase\" is selected and the report is generated */}\r\n          {showAdditionalColumns && (\r\n            <div className=\"ticket-type-percentages\">\r\n              <h4>Ticket Type Percentages:</h4>\r\n              <ul>\r\n                {Object.entries(ticketTypePercentages).map(([type, percentage]) => (\r\n                  <li key={type}>\r\n                    {type}: {percentage.toFixed(2)}%\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n          <table className=\"query-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Customer Name</th>\r\n                <th>Transaction Type</th>\r\n                <th>Date</th>\r\n                <th>Amount</th>\r\n                {/* Only show additional columns if \"Ticket Purchase\" is selected and the report is generated */}\r\n                {showAdditionalColumns && (\r\n                  <>\r\n                    <th>Adult Tickets</th>\r\n                    <th>Child Tickets</th>\r\n                    <th>Senior Tickets</th>\r\n                    <th>Infant Tickets</th>\r\n                  </>\r\n                )}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {queryData.map((transaction, index) => (\r\n                <tr key={index}>\r\n                  <td>{transaction.CustomerName}</td>\r\n                  <td>{transaction.TransactionType}</td>\r\n                  <td>{transaction.TransactionDate ? new Date(transaction.TransactionDate).toLocaleDateString() : \"\"}</td>\r\n                  <td>${transaction.Amount ? transaction.Amount.toFixed(2) : \"\"}</td>\r\n                  {/* Display ticket type values only if the transaction type is \"Ticket Purchase\" */}\r\n                  {showAdditionalColumns && transaction.TransactionType === \"Ticket Purchase\" && (\r\n                    <>\r\n                      <td>{transaction.AdultTickets || 0}</td>\r\n                      <td>{transaction.ChildTickets || 0}</td>\r\n                      <td>{transaction.SeniorTickets || 0}</td>\r\n                      <td>{transaction.InfantTickets || 0}</td>\r\n                    </>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RevenueReport;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}