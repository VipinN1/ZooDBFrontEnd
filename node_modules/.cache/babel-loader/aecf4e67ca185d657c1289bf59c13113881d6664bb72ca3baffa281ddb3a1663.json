{"ast":null,"code":"var _jsxFileName = \"/Users/omariftikhar/Desktop/Zoo Frontend/ZooDBFrontEnd/src/components/RevenueReport/RevenueReport.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './RevenueReport.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RevenueReport() {\n  _s();\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [transactionType, setTransactionType] = useState('all');\n  const [queryData, setQueryData] = useState([]);\n  const [showAdditionalColumns, setShowAdditionalColumns] = useState(false);\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  const [ticketTypePercentages, setTicketTypePercentages] = useState({\n    AdultTickets: 0,\n    ChildTickets: 0,\n    SeniorTickets: 0,\n    InfantTickets: 0\n  });\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const requestData = {\n      transactionType,\n      ...(startDate && {\n        startDate\n      }),\n      ...(endDate && {\n        endDate\n      })\n    };\n    console.log('Request Data:', requestData);\n\n    // Post request to fetch revenue data based on the input fields\n    try {\n      const response = await axios.post('http://localhost:5095/api/ZooDb/RevenueReport', requestData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Response Data:', response.data);\n\n      // Sort the response data by TransactionDate\n      const sortedData = response.data.slice().sort((a, b) => {\n        return new Date(a.TransactionDate) - new Date(b.TransactionDate);\n      });\n\n      // Set the report data based on the sorted response from the back-end\n      setQueryData(sortedData);\n\n      // Calculate total revenue\n      const revenue = sortedData.reduce((acc, curr) => acc + curr.Amount, 0);\n      setTotalRevenue(revenue);\n\n      // Calculate ticket type percentages\n      if (transactionType === 'ticket') {\n        const ticketTypeTotals = {\n          AdultTickets: 0,\n          ChildTickets: 0,\n          SeniorTickets: 0,\n          InfantTickets: 0\n        };\n        sortedData.forEach(transaction => {\n          ticketTypeTotals.AdultTickets += transaction.AdultTickets || 0;\n          ticketTypeTotals.ChildTickets += transaction.ChildTickets || 0;\n          ticketTypeTotals.SeniorTickets += transaction.SeniorTickets || 0;\n          ticketTypeTotals.InfantTickets += transaction.InfantTickets || 0;\n        });\n        const totalTickets = sortedData.reduce((acc, transaction) => {\n          if (transaction.TransactionType === 'Ticket Purchase') {\n            acc += transaction.AdultTickets + transaction.ChildTickets + transaction.SeniorTickets + transaction.InfantTickets;\n          }\n          return acc;\n        }, 0);\n        const percentages = {\n          AdultTickets: ticketTypeTotals.AdultTickets / totalTickets * 100,\n          ChildTickets: ticketTypeTotals.ChildTickets / totalTickets * 100,\n          SeniorTickets: ticketTypeTotals.SeniorTickets / totalTickets * 100,\n          InfantTickets: ticketTypeTotals.InfantTickets / totalTickets * 100\n        };\n        setTicketTypePercentages(percentages);\n      } else {\n        // If transactionType is not 'ticket', reset ticketTypePercentages\n        setTicketTypePercentages({\n          AdultTickets: 0,\n          ChildTickets: 0,\n          SeniorTickets: 0,\n          InfantTickets: 0\n        });\n      }\n\n      // Show additional columns if transaction type is \"Ticket Purchase\"\n      setShowAdditionalColumns(transactionType === 'ticket');\n    } catch (error) {\n      console.error('Error fetching query data:', error);\n      // Clear query data in case of error\n      setQueryData([]);\n      // Reset total revenue and ticket type percentages\n      setTotalRevenue(0);\n      setTicketTypePercentages({\n        AdultTickets: 0,\n        ChildTickets: 0,\n        SeniorTickets: 0,\n        InfantTickets: 0\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"revenue-query-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Zoo Revenue Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"startDate\",\n          children: \"Start Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"startDate\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"endDate\",\n          children: \"End Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"endDate\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"transactionType\",\n          children: \"Transaction Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"transactionType\",\n          value: transactionType,\n          onChange: e => setTransactionType(e.target.value),\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ticket\",\n            children: \"Ticket Purchase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"donation\",\n            children: \"Donation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Generate Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), queryData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"query-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Revenue Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Revenue: $\", totalRevenue.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), showAdditionalColumns && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-type-percentages\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Ticket Type Percentages:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(ticketTypePercentages).map(([type, percentage]) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [type, \": \", percentage.toFixed(2), \"%\"]\n          }, type, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"query-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transaction Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), showAdditionalColumns && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Adult Tickets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Child Tickets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Senior Tickets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Infant Tickets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: queryData.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.CustomerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.TransactionType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.TransactionDate ? new Date(transaction.TransactionDate).toLocaleDateString() : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", transaction.Amount ? transaction.Amount.toFixed(2) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), showAdditionalColumns && transaction.TransactionType === \"Ticket Purchase\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.AdultTickets || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.ChildTickets || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.SeniorTickets || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.InfantTickets || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(RevenueReport, \"SU3zG9PRbDPX3R55lrSHkqx40OY=\");\n_c = RevenueReport;\nexport default RevenueReport;\nvar _c;\n$RefreshReg$(_c, \"RevenueReport\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","RevenueReport","_s","startDate","setStartDate","endDate","setEndDate","transactionType","setTransactionType","queryData","setQueryData","showAdditionalColumns","setShowAdditionalColumns","totalRevenue","setTotalRevenue","ticketTypePercentages","setTicketTypePercentages","AdultTickets","ChildTickets","SeniorTickets","InfantTickets","handleFormSubmit","event","preventDefault","requestData","console","log","response","post","headers","data","sortedData","slice","sort","a","b","Date","TransactionDate","revenue","reduce","acc","curr","Amount","ticketTypeTotals","forEach","transaction","totalTickets","TransactionType","percentages","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","length","toFixed","Object","entries","map","percentage","index","CustomerName","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/omariftikhar/Desktop/Zoo Frontend/ZooDBFrontEnd/src/components/RevenueReport/RevenueReport.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './RevenueReport.css';\nimport axios from 'axios';\n\nfunction RevenueReport() {\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [transactionType, setTransactionType] = useState('all');\n\n  const [queryData, setQueryData] = useState([]);\n  const [showAdditionalColumns, setShowAdditionalColumns] = useState(false);\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  const [ticketTypePercentages, setTicketTypePercentages] = useState({\n    AdultTickets: 0,\n    ChildTickets: 0,\n    SeniorTickets: 0,\n    InfantTickets: 0,\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n  \n    const requestData = {\n      transactionType,\n      ...(startDate && { startDate }),\n      ...(endDate && { endDate }),\n    };\n\n    console.log('Request Data:', requestData);\n  \n    // Post request to fetch revenue data based on the input fields\n    try {\n      const response = await axios.post('http://localhost:5095/api/ZooDb/RevenueReport', requestData, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      console.log('Response Data:', response.data);\n  \n      // Sort the response data by TransactionDate\n      const sortedData = response.data.slice().sort((a, b) => {\n        return new Date(a.TransactionDate) - new Date(b.TransactionDate);\n      });\n  \n      // Set the report data based on the sorted response from the back-end\n      setQueryData(sortedData);\n  \n      // Calculate total revenue\n      const revenue = sortedData.reduce((acc, curr) => acc + curr.Amount, 0);\n      setTotalRevenue(revenue);\n  \n      // Calculate ticket type percentages\n      if (transactionType === 'ticket') {\n        const ticketTypeTotals = {\n          AdultTickets: 0,\n          ChildTickets: 0,\n          SeniorTickets: 0,\n          InfantTickets: 0,\n        };\n  \n        sortedData.forEach((transaction) => {\n          ticketTypeTotals.AdultTickets += transaction.AdultTickets || 0;\n          ticketTypeTotals.ChildTickets += transaction.ChildTickets || 0;\n          ticketTypeTotals.SeniorTickets += transaction.SeniorTickets || 0;\n          ticketTypeTotals.InfantTickets += transaction.InfantTickets || 0;\n        });\n  \n        const totalTickets = sortedData.reduce((acc, transaction) => {\n          if (transaction.TransactionType === 'Ticket Purchase') {\n            acc += transaction.AdultTickets + transaction.ChildTickets + transaction.SeniorTickets + transaction.InfantTickets;\n          }\n          return acc;\n        }, 0);\n  \n        const percentages = {\n          AdultTickets: (ticketTypeTotals.AdultTickets / totalTickets) * 100,\n          ChildTickets: (ticketTypeTotals.ChildTickets / totalTickets) * 100,\n          SeniorTickets: (ticketTypeTotals.SeniorTickets / totalTickets) * 100,\n          InfantTickets: (ticketTypeTotals.InfantTickets / totalTickets) * 100,\n        };\n  \n        setTicketTypePercentages(percentages);\n      } else {\n        // If transactionType is not 'ticket', reset ticketTypePercentages\n        setTicketTypePercentages({\n          AdultTickets: 0,\n          ChildTickets: 0,\n          SeniorTickets: 0,\n          InfantTickets: 0,\n        });\n      }\n  \n      // Show additional columns if transaction type is \"Ticket Purchase\"\n      setShowAdditionalColumns(transactionType === 'ticket');\n    } catch (error) {\n      console.error('Error fetching query data:', error);\n      // Clear query data in case of error\n      setQueryData([]);\n      // Reset total revenue and ticket type percentages\n      setTotalRevenue(0);\n      setTicketTypePercentages({\n        AdultTickets: 0,\n        ChildTickets: 0,\n        SeniorTickets: 0,\n        InfantTickets: 0,\n      });\n    }\n  };\n  \n\n  return (\n    <div className=\"revenue-query-container\">\n      <h2>Zoo Revenue Report</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"startDate\">Start Date:</label>\n          <input\n            type=\"date\"\n            id=\"startDate\"\n            value={startDate}\n            onChange={(e) => setStartDate(e.target.value)}\n            className=\"input\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"endDate\">End Date:</label>\n          <input\n            type=\"date\"\n            id=\"endDate\"\n            value={endDate}\n            onChange={(e) => setEndDate(e.target.value)}\n            className=\"input\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"transactionType\">Transaction Type:</label>\n          <select\n            id=\"transactionType\"\n            value={transactionType}\n            onChange={(e) => setTransactionType(e.target.value)}\n            className=\"input\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"ticket\">Ticket Purchase</option>\n            <option value=\"donation\">Donation</option>\n          </select>\n        </div>\n        <button type=\"submit\" className=\"submit-button\">\n          Generate Report\n        </button>\n      </form>\n\n      {/* Display report data if available */}\n      {queryData.length > 0 && (\n        <div className=\"query-data\">\n          <h3>Revenue Report:</h3>\n          <p>Total Revenue: ${totalRevenue.toFixed(2)}</p>\n          {/* Display ticket type percentages only if \"Ticket Purchase\" is selected and the report is generated */}\n          {showAdditionalColumns && (\n            <div className=\"ticket-type-percentages\">\n              <h4>Ticket Type Percentages:</h4>\n              <ul>\n                {Object.entries(ticketTypePercentages).map(([type, percentage]) => (\n                  <li key={type}>\n                    {type}: {percentage.toFixed(2)}%\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          <table className=\"query-table\">\n            <thead>\n              <tr>\n                <th>Customer Name</th>\n                <th>Transaction Type</th>\n                <th>Date</th>\n                <th>Amount</th>\n                {/* Only show additional columns if \"Ticket Purchase\" is selected and the report is generated */}\n                {showAdditionalColumns && (\n                  <>\n                    <th>Adult Tickets</th>\n                    <th>Child Tickets</th>\n                    <th>Senior Tickets</th>\n                    <th>Infant Tickets</th>\n                  </>\n                )}\n              </tr>\n            </thead>\n            <tbody>\n              {queryData.map((transaction, index) => (\n                <tr key={index}>\n                  <td>{transaction.CustomerName}</td>\n                  <td>{transaction.TransactionType}</td>\n                  <td>{transaction.TransactionDate ? new Date(transaction.TransactionDate).toLocaleDateString() : \"\"}</td>\n                  <td>${transaction.Amount ? transaction.Amount.toFixed(2) : \"\"}</td>\n                  {/* Display ticket type values only if the transaction type is \"Ticket Purchase\" */}\n                  {showAdditionalColumns && transaction.TransactionType === \"Ticket Purchase\" && (\n                    <>\n                      <td>{transaction.AdultTickets || 0}</td>\n                      <td>{transaction.ChildTickets || 0}</td>\n                      <td>{transaction.SeniorTickets || 0}</td>\n                      <td>{transaction.InfantTickets || 0}</td>\n                    </>\n                  )}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default RevenueReport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}