{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'./ClockIn.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ClockIn(){const[clockInTime,setClockInTime]=useState(null);const[clockOutTime,setClockOutTime]=useState(null);const[totalHoursWorked,setTotalHoursWorked]=useState(null);const[message,setMessage]=useState('');const handleClockIn=()=>{const currentTime=new Date();setClockInTime(currentTime);setMessage('Clock-in successful');// Backend logic for clock-in time\nconsole.log('Clock In Time:',currentTime);};const handleClockOut=()=>{const currentTime=new Date();setClockOutTime(currentTime);if(clockInTime){const diff=Math.abs(currentTime-clockInTime);const hours=Math.floor(diff/(1000*60*60));const minutes=Math.floor(diff%(1000*60*60)/(1000*60));const totalHours=hours+minutes/60;setTotalHoursWorked(totalHours);setMessage('Clock-out successful');// Send both employeeId and totalHoursWorked to backend here\nsendClockOutDataToBackend(totalHours);// Backend logic for clock-out time\nconsole.log('Clock Out Time:',currentTime);}else{setMessage('Please clock in before clocking out');}};const sendClockOutDataToBackend=hoursWorked=>{// Placeholder for sending clock out data to the backend\n// Replace the URL with your actual backend endpoint\nconsole.log('Hours worked',hoursWorked);axios.post('/clock-out',{hoursWorked}).then(response=>{console.log('Clock out data sent to backend:',response.data);}).catch(error=>{console.error('Error sending clock out data to backend:',error);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"clock-in\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Employee Clock In/Out\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleClockIn,children:\"Clock In\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClockOut,children:\"Clock Out\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Clock In Time: \",clockInTime?clockInTime.toLocaleString():'N/A']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Clock Out Time: \",clockOutTime?clockOutTime.toLocaleString():'N/A']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total Hours Worked: \",totalHoursWorked!==null?totalHoursWorked.toFixed(2)+' hours':'N/A']})]}),message&&/*#__PURE__*/_jsx(\"p\",{children:message})]});}export default ClockIn;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","ClockIn","clockInTime","setClockInTime","clockOutTime","setClockOutTime","totalHoursWorked","setTotalHoursWorked","message","setMessage","handleClockIn","currentTime","Date","console","log","handleClockOut","diff","Math","abs","hours","floor","minutes","totalHours","sendClockOutDataToBackend","hoursWorked","post","then","response","data","catch","error","className","children","onClick","toLocaleString","toFixed"],"sources":["/Users/omariftikhar/Desktop/zoo-website copy try 2/src/components/ClockIn/ClockIn.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './ClockIn.css';\n\nfunction ClockIn() {\n  const [clockInTime, setClockInTime] = useState(null);\n  const [clockOutTime, setClockOutTime] = useState(null);\n  const [totalHoursWorked, setTotalHoursWorked] = useState(null);\n  const [message, setMessage] = useState('');\n\n  const handleClockIn = () => {\n    const currentTime = new Date();\n    setClockInTime(currentTime);\n    setMessage('Clock-in successful');\n    // Backend logic for clock-in time\n    console.log('Clock In Time:', currentTime);\n  };\n\n  const handleClockOut = () => {\n    const currentTime = new Date();\n    setClockOutTime(currentTime);\n\n    if (clockInTime) {\n      const diff = Math.abs(currentTime - clockInTime);\n      const hours = Math.floor(diff / (1000 * 60 * 60));\n      const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n      const totalHours = hours + minutes / 60;\n      setTotalHoursWorked(totalHours);\n      setMessage('Clock-out successful');\n\n      // Send both employeeId and totalHoursWorked to backend here\n      sendClockOutDataToBackend(totalHours);\n      \n      // Backend logic for clock-out time\n      console.log('Clock Out Time:', currentTime);\n    } else {\n      setMessage('Please clock in before clocking out');\n    }\n  };\n\n  const sendClockOutDataToBackend = (hoursWorked) => {\n    // Placeholder for sending clock out data to the backend\n    // Replace the URL with your actual backend endpoint\n    console.log('Hours worked',hoursWorked);\n    axios.post('/clock-out', { hoursWorked })\n      .then(response => {\n        console.log('Clock out data sent to backend:', response.data);\n      })\n      .catch(error => {\n        console.error('Error sending clock out data to backend:', error);\n      });\n  };\n\n  return (\n    <div className='clock-in'>\n      <h1>Employee Clock In/Out</h1>\n      <br></br>\n      <div>\n        <button onClick={handleClockIn}>Clock In</button>\n        <button onClick={handleClockOut}>Clock Out</button>\n      </div>\n      <div>\n        <p>Clock In Time: {clockInTime ? clockInTime.toLocaleString() : 'N/A'}</p>\n        <p>Clock Out Time: {clockOutTime ? clockOutTime.toLocaleString() : 'N/A'}</p>\n        <p>Total Hours Worked: {totalHoursWorked !== null ? totalHoursWorked.toFixed(2) + ' hours' : 'N/A'}</p>\n      </div>\n      {message && <p>{message}</p>}\n    </div>\n  );\n}\n\nexport default ClockIn;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}