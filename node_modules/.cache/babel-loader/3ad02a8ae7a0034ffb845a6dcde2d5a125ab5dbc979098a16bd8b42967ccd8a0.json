{"ast":null,"code":"var _jsxFileName = \"/Users/omariftikhar/Desktop/Zoo-Database/Zoo-Database/zoo-db/zoo-website/src/components/ClockIn/ClockIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ClockIn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClockIn() {\n  _s();\n  const [employeeId, setEmployeeId] = useState('');\n  const [clockInTime, setClockInTime] = useState(null);\n  const [clockOutTime, setClockOutTime] = useState(null);\n  const [message, setMessage] = useState('');\n  const handleClockIn = async () => {\n    try {\n      // Save clock-in information\n      setClockInTime(new Date());\n      // Log clock-in information\n      console.log('Clock In Time:', clockInTime);\n      setMessage('Clock-in successful');\n\n      // Send clock-in information to backend\n      const response = await axios.post('/clock-in', {\n        employeeId,\n        clockInTime\n      });\n      console.log('Clock-in response:', response.data); // Log backend response if needed\n    } catch (error) {\n      console.error('Clock-in error:', error);\n      setMessage('Clock-in failed');\n    }\n  };\n  const handleClockOut = async () => {\n    try {\n      // Save clock-out information\n      setClockOutTime(new Date());\n      // Log clock-out information\n      console.log('Clock Out Time:', clockOutTime);\n      setMessage('Clock-out successful');\n\n      // Send clock-out information to backend\n      const response = await axios.post('/clock-out', {\n        employeeId,\n        clockOutTime\n      });\n      console.log('Clock-out response:', response.data); // Log backend response if needed\n    } catch (error) {\n      console.error('Clock-out error:', error);\n      setMessage('Clock-out failed');\n    }\n  };\n  const calculateHoursWorked = () => {\n    if (clockInTime && clockOutTime) {\n      const diff = Math.abs(clockOutTime - clockInTime);\n      const hours = Math.floor(diff / (1000 * 60 * 60));\n      const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n      return `${hours} hours and ${minutes} minutes`;\n    }\n    return 'N/A';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clock-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee Clock In/Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Employee ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: employeeId,\n          onChange: e => setEmployeeId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClockIn,\n        children: \"Clock In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClockOut,\n        children: \"Clock Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Clock In Time: \", clockInTime ? clockInTime.toLocaleString() : 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Clock Out Time: \", clockOutTime ? clockOutTime.toLocaleString() : 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Hours Worked: \", calculateHoursWorked()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(ClockIn, \"7qpeSz0dVMKBfN8dg1c4OKh1Xo0=\");\n_c = ClockIn;\nexport default ClockIn;\nvar _c;\n$RefreshReg$(_c, \"ClockIn\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ClockIn","_s","employeeId","setEmployeeId","clockInTime","setClockInTime","clockOutTime","setClockOutTime","message","setMessage","handleClockIn","Date","console","log","response","post","data","error","handleClockOut","calculateHoursWorked","diff","Math","abs","hours","floor","minutes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/omariftikhar/Desktop/Zoo-Database/Zoo-Database/zoo-db/zoo-website/src/components/ClockIn/ClockIn.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './ClockIn.css';\n\nfunction ClockIn() {\n  const [employeeId, setEmployeeId] = useState('');\n  const [clockInTime, setClockInTime] = useState(null);\n  const [clockOutTime, setClockOutTime] = useState(null);\n  const [message, setMessage] = useState('');\n\n  const handleClockIn = async () => {\n    try {\n      // Save clock-in information\n      setClockInTime(new Date());\n      // Log clock-in information\n      console.log('Clock In Time:', clockInTime);\n      setMessage('Clock-in successful');\n      \n      // Send clock-in information to backend\n      const response = await axios.post('/clock-in', { employeeId, clockInTime });\n      console.log('Clock-in response:', response.data); // Log backend response if needed\n    } catch (error) {\n      console.error('Clock-in error:', error);\n      setMessage('Clock-in failed');\n    }\n  };\n\n  const handleClockOut = async () => {\n    try {\n      // Save clock-out information\n      setClockOutTime(new Date());\n      // Log clock-out information\n      console.log('Clock Out Time:', clockOutTime);\n      setMessage('Clock-out successful');\n\n      // Send clock-out information to backend\n      const response = await axios.post('/clock-out', { employeeId, clockOutTime });\n      console.log('Clock-out response:', response.data); // Log backend response if needed\n    } catch (error) {\n      console.error('Clock-out error:', error);\n      setMessage('Clock-out failed');\n    }\n  };\n\n  const calculateHoursWorked = () => {\n    if (clockInTime && clockOutTime) {\n      const diff = Math.abs(clockOutTime - clockInTime);\n      const hours = Math.floor(diff / (1000 * 60 * 60));\n      const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n      return `${hours} hours and ${minutes} minutes`;\n    }\n    return 'N/A';\n  };\n\n  return (\n    <div className='clock-in'>\n      <h1>Employee Clock In/Out</h1>\n      <div>\n        <label>\n          Employee ID:\n          <input type=\"text\" value={employeeId} onChange={(e) => setEmployeeId(e.target.value)} />\n        </label>\n      </div>\n      <br></br>\n      <div>\n        <button onClick={handleClockIn}>Clock In</button>\n        <button onClick={handleClockOut}>Clock Out</button>\n      </div>\n      <div>\n        <p>Clock In Time: {clockInTime ? clockInTime.toLocaleString() : 'N/A'}</p>\n        <p>Clock Out Time: {clockOutTime ? clockOutTime.toLocaleString() : 'N/A'}</p>\n        <p>Total Hours Worked: {calculateHoursWorked()}</p>\n      </div>\n      {message && <p>{message}</p>}\n    </div>\n  );\n}\n\nexport default ClockIn;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}